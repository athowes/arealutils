[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adam Howes. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Howes (2023). arealutils: Areal Utility Functions. R package version 0.0.1.","code":"@Manual{,   title = {arealutils: Areal Utility Functions},   author = {Adam Howes},   year = {2023},   note = {R package version 0.0.1}, }"},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Areal Utility Functions","text":"R package developed support analysis beyond-borders. reason, many functions relatively unlikely great general use. disclaimer given, package can installed via:","code":"devtools::install_github(\"athowes/arealutils\")"},{"path":"/index.html","id":"tmb-and-rstan","dir":"","previous_headings":"","what":"TMB and rstan","title":"Areal Utility Functions","text":"package uses compiled models TMB rstan. make use helpful TMBtools rstantools set-package.","code":""},{"path":"/index.html","id":"guidelines-for-adding-a-new-tmb-model","dir":"","previous_headings":"TMB and rstan","what":"Guidelines for adding a new TMB model","title":"Areal Utility Functions","text":"See . Create model.hpp arealutils/src/TMB Run TMBtools::export_models() Run devtools::install() install package locally","code":""},{"path":"/index.html","id":"guidelines-for-adding-a-new-rstan-model","dir":"","previous_headings":"TMB and rstan","what":"Guidelines for adding a new rstan model","title":"Areal Utility Functions","text":"See . Create model.stan arealutils/inst/stan Run pkgbuild::compile_dll() perform fake R CMD install Run devtools::install() install package locally","code":""},{"path":"/index.html","id":"models","dir":"","previous_headings":"","what":"Models","title":"Areal Utility Functions","text":"✓: done →: done temporarily stored elsewhere (rstan compilation times building package slow development)","code":""},{"path":"/index.html","id":"common-tasks","dir":"","previous_headings":"","what":"Common tasks","title":"Areal Utility Functions","text":"build website, use pkgdown::build_site() document functions, use devtools::document()","code":""},{"path":"/reference/arealutils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"arealutils: Areal Utility Functions — arealutils-package","title":"arealutils: Areal Utility Functions — arealutils-package","text":"Functions used areal-comparison analysis.","code":""},{"path":"/reference/arealutils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"arealutils: Areal Utility Functions — arealutils-package","text":"Maintainer: Adam Howes ath19@ic.ac.uk","code":""},{"path":"/reference/besag_aghq.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Besag Small Area Estimation model using aghq. — besag_aghq","title":"Fit Besag Small Area Estimation model using aghq. — besag_aghq","text":"Random effects improper conditional autoregressive (ICAR) distribution (generalised) precision matrix produced using nb_to_precision function input nb, neighbourhood structure sf.","code":""},{"path":"/reference/besag_aghq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Besag Small Area Estimation model using aghq. — besag_aghq","text":"","code":"besag_aghq(sf, k = 3)"},{"path":"/reference/besag_aghq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Besag Small Area Estimation model using aghq. — besag_aghq","text":"sf simple features object geometry. k Number quadrature points per hyperparameter dimension.","code":""},{"path":"/reference/besag_aghq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Besag Small Area Estimation model using aghq. — besag_aghq","text":"","code":"besag_aghq(mw) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/besag_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Besag Small Area Estimation model using R-INLA. — besag_inla","title":"Fit Besag Small Area Estimation model using R-INLA. — besag_inla","text":"Random effects improper conditional autoregressive (ICAR) distribution. implemented R-INLA using option model = \"besag\".","code":""},{"path":"/reference/besag_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Besag Small Area Estimation model using R-INLA. — besag_inla","text":"","code":"besag_inla(sf, verbose = FALSE, cores = parallel::detectCores())"},{"path":"/reference/besag_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Besag Small Area Estimation model using R-INLA. — besag_inla","text":"sf simple features object geometry. verbose R-INLA run mode verbose = TRUE. cores Number cores, passed R-INLA, defaults parallel::detectCores().","code":""},{"path":"/reference/besag_inla.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Besag Small Area Estimation model using R-INLA. — besag_inla","text":"","code":"besag_inla(mw, cores = 2) #> Error in .class1(object): object 'mw' not found"},{"path":"/reference/besag_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Besag Small Area Estimation model using rstan. — besag_stan","title":"Fit Besag Small Area Estimation model using rstan. — besag_stan","text":"Random effects improper conditional autoregressive (ICAR) distribution (generalised) precision matrix produced using nb_to_precision function input nb, neighbourhood structure sf.","code":""},{"path":"/reference/besag_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Besag Small Area Estimation model using rstan. — besag_stan","text":"","code":"besag_stan(   sf,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores(),   method = \"default\" )"},{"path":"/reference/besag_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Besag Small Area Estimation model using rstan. — besag_stan","text":"sf simple features object geometry. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores() method One \"default\" \"morris\".","code":""},{"path":"/reference/besag_stan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Besag Small Area Estimation model using rstan. — besag_stan","text":"","code":"besag_stan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in which(!is.na(sf$y)): object 'mw' not found"},{"path":"/reference/besag_tmb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Besag Small Area Estimation model using TMB. — besag_tmb","title":"Fit Besag Small Area Estimation model using TMB. — besag_tmb","text":"Random effects improper conditional autoregressive (ICAR) distribution (generalised) precision matrix produced using nb_to_precision function input nb, neighbourhood structure sf.","code":""},{"path":"/reference/besag_tmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Besag Small Area Estimation model using TMB. — besag_tmb","text":"","code":"besag_tmb(sf, its = 1000)"},{"path":"/reference/besag_tmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Besag Small Area Estimation model using TMB. — besag_tmb","text":"sf simple features object geometry. Number iterations outer loop optimisation, passed nlminb.","code":""},{"path":"/reference/besag_tmb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Besag Small Area Estimation model using TMB. — besag_tmb","text":"","code":"besag_tmb(mw, its = 100) #> Error in .class1(object): object 'mw' not found"},{"path":"/reference/besag_tmbstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Besag Small Area Estimation model using tmbstan. — besag_tmbstan","title":"Fit Besag Small Area Estimation model using tmbstan. — besag_tmbstan","text":"Random effects improper conditional autoregressive (ICAR) distribution (generalised) precision matrix produced using nb_to_precision function input nb, neighbourhood structure sf.","code":""},{"path":"/reference/besag_tmbstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Besag Small Area Estimation model using tmbstan. — besag_tmbstan","text":"","code":"besag_tmbstan(   sf,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores() )"},{"path":"/reference/besag_tmbstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Besag Small Area Estimation model using tmbstan. — besag_tmbstan","text":"sf simple features object geometry. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores()","code":""},{"path":"/reference/besag_tmbstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Besag Small Area Estimation model using tmbstan. — besag_tmbstan","text":"","code":"besag_tmbstan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in .class1(object): object 'mw' not found"},{"path":"/reference/best_average.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute length-scale such that averagely distant points have correlation p. — best_average","title":"Compute length-scale such that averagely distant points have correlation p. — best_average","text":"See Best (1999) \"Bayesian models spatially correlated disease exposure data\". average distance points 1e-8 returns value one.","code":""},{"path":"/reference/best_average.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute length-scale such that averagely distant points have correlation p. — best_average","text":"","code":"best_average(D, kernel = matern, p = 0.01, ...)"},{"path":"/reference/best_average.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute length-scale such that averagely distant points have correlation p. — best_average","text":"D Matrix distances points. kernel kernel function, defaults matern. p percentage, defaults 0.01. ... Additional arguments kernel.","code":""},{"path":"/reference/border_lengths.html","id":null,"dir":"Reference","previous_headings":"","what":"Create object containing lengths of borders from sf object. — border_lengths","title":"Create object containing lengths of borders from sf object. — border_lengths","text":"function border_lengths creates dataframe area sf containing information shared borders areas. Within package primary use within border_precision.","code":""},{"path":"/reference/border_lengths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create object containing lengths of borders from sf object. — border_lengths","text":"","code":"border_lengths(sf)"},{"path":"/reference/border_lengths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create object containing lengths of borders from sf object. — border_lengths","text":"sf simple features object geometry.","code":""},{"path":"/reference/border_lengths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create object containing lengths of borders from sf object. — border_lengths","text":"list nrow(sf) data frames columns: origin origin node. perimeter perimeter origin node. touching index node shared border origin node. length length border origin touching. weight proportion origin's border touching.","code":""},{"path":"/reference/border_lengths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create object containing lengths of borders from sf object. — border_lengths","text":"","code":"border_lengths(mw) #> Error in sf::st_geometry(sf): object 'mw' not found"},{"path":"/reference/border_precision.html","id":null,"dir":"Reference","previous_headings":"","what":"Create border ICAR precision matrix from sf. — border_precision","title":"Create border ICAR precision matrix from sf. — border_precision","text":"function creates weighted ICAR precision matrix \\(Q\\). \\(Q\\) entry \\(Q_{ij}\\) equal shared length border two areas (zero adjacent). diagonal elements \\(Q_{ii}\\) equal total border area.","code":""},{"path":"/reference/border_precision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create border ICAR precision matrix from sf. — border_precision","text":"","code":"border_precision(sf)"},{"path":"/reference/border_precision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create border ICAR precision matrix from sf. — border_precision","text":"sf simple features object geometry.","code":""},{"path":"/reference/border_precision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create border ICAR precision matrix from sf. — border_precision","text":"ICAR precision matrix based upon sf.","code":""},{"path":"/reference/border_precision.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create border ICAR precision matrix from sf. — border_precision","text":"","code":"border_precision(mw) #> Error in sf::st_geometry(sf): object 'mw' not found"},{"path":"/reference/bym2_aghq.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit BYM2 Small Area Estimation model using aghq. — bym2_aghq","title":"Fit BYM2 Small Area Estimation model using aghq. — bym2_aghq","text":"Fit BYM2 Small Area Estimation model using aghq.","code":""},{"path":"/reference/bym2_aghq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit BYM2 Small Area Estimation model using aghq. — bym2_aghq","text":"","code":"bym2_aghq(sf, k = 3)"},{"path":"/reference/bym2_aghq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit BYM2 Small Area Estimation model using aghq. — bym2_aghq","text":"sf simple features object geometry. k Number quadrature points per hyperparameter dimension.","code":""},{"path":"/reference/bym2_aghq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit BYM2 Small Area Estimation model using aghq. — bym2_aghq","text":"","code":"bym2_aghq(mw) #> Error in .class1(object): object 'mw' not found"},{"path":"/reference/bym2_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit BYM2 Small Area Estimation model using R-INLA. — bym2_inla","title":"Fit BYM2 Small Area Estimation model using R-INLA. — bym2_inla","text":"Fit BYM2 Small Area Estimation model using R-INLA.","code":""},{"path":"/reference/bym2_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit BYM2 Small Area Estimation model using R-INLA. — bym2_inla","text":"","code":"bym2_inla(sf, verbose = FALSE, cores = parallel::detectCores())"},{"path":"/reference/bym2_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit BYM2 Small Area Estimation model using R-INLA. — bym2_inla","text":"sf simple features object geometry. verbose R-INLA run mode verbose = TRUE. cores Number cores, passed R-INLA, defaults parallel::detectCores().","code":""},{"path":"/reference/bym2_inla.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit BYM2 Small Area Estimation model using R-INLA. — bym2_inla","text":"","code":"bym2_inla(mw, cores = 2) #> Error in .class1(object): object 'mw' not found"},{"path":"/reference/bym2_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit BYM2 Small Area Estimation model using rstan. — bym2_stan","title":"Fit BYM2 Small Area Estimation model using rstan. — bym2_stan","text":"Fit BYM2 Small Area Estimation model using rstan.","code":""},{"path":"/reference/bym2_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit BYM2 Small Area Estimation model using rstan. — bym2_stan","text":"","code":"bym2_stan(   sf,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores(),   method = \"default\" )"},{"path":"/reference/bym2_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit BYM2 Small Area Estimation model using rstan. — bym2_stan","text":"sf simple features object geometry. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores() method One \"default\" \"morris\".","code":""},{"path":"/reference/bym2_stan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit BYM2 Small Area Estimation model using rstan. — bym2_stan","text":"","code":"bym2_stan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Warning: Doesn't take non-connectedness into account correctly! #> Error in which(!is.na(sf$y)): object 'mw' not found"},{"path":"/reference/bym2_tmb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit BYM2 Small Area Estimation model using TMB. — bym2_tmb","title":"Fit BYM2 Small Area Estimation model using TMB. — bym2_tmb","text":"Fit BYM2 Small Area Estimation model using TMB.","code":""},{"path":"/reference/bym2_tmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit BYM2 Small Area Estimation model using TMB. — bym2_tmb","text":"","code":"bym2_tmb(sf, its = 1000)"},{"path":"/reference/bym2_tmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit BYM2 Small Area Estimation model using TMB. — bym2_tmb","text":"sf simple features object geometry. Number iterations outer loop optimisation, passed nlminb.","code":""},{"path":"/reference/bym2_tmb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit BYM2 Small Area Estimation model using TMB. — bym2_tmb","text":"","code":"bym2_tmb(mw, its = 100) #> Error in .class1(object): object 'mw' not found"},{"path":"/reference/bym2_tmbstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit BYM2 Small Area Estimation model using tmbstan. — bym2_tmbstan","title":"Fit BYM2 Small Area Estimation model using tmbstan. — bym2_tmbstan","text":"Fit BYM2 Small Area Estimation model using tmbstan.","code":""},{"path":"/reference/bym2_tmbstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit BYM2 Small Area Estimation model using tmbstan. — bym2_tmbstan","text":"","code":"bym2_tmbstan(   sf,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores() )"},{"path":"/reference/bym2_tmbstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit BYM2 Small Area Estimation model using tmbstan. — bym2_tmbstan","text":"sf simple features object geometry. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores()","code":""},{"path":"/reference/bym2_tmbstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit BYM2 Small Area Estimation model using tmbstan. — bym2_tmbstan","text":"","code":"bym2_tmbstan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in .class1(object): object 'mw' not found"},{"path":"/reference/centroid_covariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute centroid kernel Gram matrix. — centroid_covariance","title":"Compute centroid kernel Gram matrix. — centroid_covariance","text":"lengthscale provided best_average method used.","code":""},{"path":"/reference/centroid_covariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute centroid kernel Gram matrix. — centroid_covariance","text":"","code":"centroid_covariance(sf, kernel = matern, l = NULL, ...)"},{"path":"/reference/centroid_covariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute centroid kernel Gram matrix. — centroid_covariance","text":"sf simple features object geometry. kernel kernel function, defaults matern. l lengthscale. ... Additional arguments kernel.","code":""},{"path":"/reference/centroid_covariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute centroid kernel Gram matrix. — centroid_covariance","text":"","code":"centroid_covariance(mw) #> Error in sf::st_centroid(sf): object 'mw' not found"},{"path":"/reference/centroid_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute distances between area centroids. — centroid_distance","title":"Compute distances between area centroids. — centroid_distance","text":"Compute distances area centroids.","code":""},{"path":"/reference/centroid_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute distances between area centroids. — centroid_distance","text":"","code":"centroid_distance(sf)"},{"path":"/reference/centroid_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute distances between area centroids. — centroid_distance","text":"sf simple features object geometry.","code":""},{"path":"/reference/centroid_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute distances between area centroids. — centroid_distance","text":"","code":"centroid_distance(mw) #> Error in sf::st_centroid(sf): object 'mw' not found"},{"path":"/reference/ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Cote d'Ivoire DHS 2012 Survey Data. — ci","title":"Cote d'Ivoire DHS 2012 Survey Data. — ci","text":"Cote d'Ivoire DHS 2012 Survey Data.","code":""},{"path":"/reference/ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cote d'Ivoire DHS 2012 Survey Data. — ci","text":"","code":"ci"},{"path":"/reference/ci.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cote d'Ivoire DHS 2012 Survey Data. — ci","text":"simple features data frame 33 rows 17 variables.","code":""},{"path":"/reference/ck_aghq.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Bayesian Centroid MVN Small Area Estimation model using aghq. — ck_aghq","title":"Fit Bayesian Centroid MVN Small Area Estimation model using aghq. — ck_aghq","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using centroid_covariance. Kernel hyperparameters given prior learnt.","code":""},{"path":"/reference/ck_aghq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Bayesian Centroid MVN Small Area Estimation model using aghq. — ck_aghq","text":"","code":"ck_aghq(sf, k = 3)"},{"path":"/reference/ck_aghq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Bayesian Centroid MVN Small Area Estimation model using aghq. — ck_aghq","text":"sf simple features object geometry. k Number quadrature points per hyperparameter dimension.","code":""},{"path":"/reference/ck_aghq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Bayesian Centroid MVN Small Area Estimation model using aghq. — ck_aghq","text":"","code":"ck_aghq(mw) #> Error in sf::st_centroid(sf): object 'mw' not found"},{"path":"/reference/ck_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Bayesian Centroid MVN Small Area Estimation model using rstan. — ck_stan","title":"Fit Bayesian Centroid MVN Small Area Estimation model using rstan. — ck_stan","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using centroid_covariance. Unlike m5_stan, version fully Bayesian treatment kernel hyperparameters.","code":""},{"path":"/reference/ck_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Bayesian Centroid MVN Small Area Estimation model using rstan. — ck_stan","text":"","code":"ck_stan(   sf,   bym2 = FALSE,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores() )"},{"path":"/reference/ck_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Bayesian Centroid MVN Small Area Estimation model using rstan. — ck_stan","text":"sf simple features object geometry. bym2 Logical indicating spatial random effects convoluted unstructured IID noise, defaults FALSE. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores()","code":""},{"path":"/reference/ck_stan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Bayesian Centroid MVN Small Area Estimation model using rstan. — ck_stan","text":"","code":"ck_stan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in sf::st_centroid(sf): object 'mw' not found"},{"path":"/reference/ck_tmb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Bayesian Centroid MVN Small Area Estimation model using TMB. — ck_tmb","title":"Fit Bayesian Centroid MVN Small Area Estimation model using TMB. — ck_tmb","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using centroid_covariance. Kernel hyperparameters given prior learnt.","code":""},{"path":"/reference/ck_tmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Bayesian Centroid MVN Small Area Estimation model using TMB. — ck_tmb","text":"","code":"ck_tmb(sf, its = 1000)"},{"path":"/reference/ck_tmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Bayesian Centroid MVN Small Area Estimation model using TMB. — ck_tmb","text":"sf simple features object geometry. Number iterations outer loop optimisation, passed nlminb.","code":""},{"path":"/reference/ck_tmb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Bayesian Centroid MVN Small Area Estimation model using TMB. — ck_tmb","text":"","code":"ck_tmb(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in ck_tmb(mw, nsim_warm = 0, nsim_iter = 100, cores = 2): unused arguments (nsim_warm = 0, nsim_iter = 100, cores = 2)"},{"path":"/reference/ck_tmbstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Bayesian Centroid MVN Small Area Estimation model using tmbstan. — ck_tmbstan","title":"Fit Bayesian Centroid MVN Small Area Estimation model using tmbstan. — ck_tmbstan","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using centroid_covariance. Kernel hyperparameters given prior learnt.","code":""},{"path":"/reference/ck_tmbstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Bayesian Centroid MVN Small Area Estimation model using tmbstan. — ck_tmbstan","text":"","code":"ck_tmbstan(   sf,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores() )"},{"path":"/reference/ck_tmbstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Bayesian Centroid MVN Small Area Estimation model using tmbstan. — ck_tmbstan","text":"sf simple features object geometry. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores()","code":""},{"path":"/reference/ck_tmbstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Bayesian Centroid MVN Small Area Estimation model using tmbstan. — ck_tmbstan","text":"","code":"ck_tmbstan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in sf::st_centroid(sf): object 'mw' not found"},{"path":"/reference/constant_aghq.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit constant Small Area Estimation model using aghq. — constant_aghq","title":"Fit constant Small Area Estimation model using aghq. — constant_aghq","text":"Simply fits constant (mean). useful benchmark models.","code":""},{"path":"/reference/constant_aghq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit constant Small Area Estimation model using aghq. — constant_aghq","text":"","code":"constant_aghq(sf, k = 3)"},{"path":"/reference/constant_aghq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit constant Small Area Estimation model using aghq. — constant_aghq","text":"sf simple features object geometry. k Number quadrature points per hyperparameter dimension.","code":""},{"path":"/reference/constant_aghq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit constant Small Area Estimation model using aghq. — constant_aghq","text":"","code":"constant_aghq(mw) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/constant_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit constant Small Area Estimation model using R-INLA. — constant_inla","title":"Fit constant Small Area Estimation model using R-INLA. — constant_inla","text":"Simply fits constant (mean). useful benchmark models.","code":""},{"path":"/reference/constant_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit constant Small Area Estimation model using R-INLA. — constant_inla","text":"","code":"constant_inla(sf, verbose = FALSE, cores = parallel::detectCores())"},{"path":"/reference/constant_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit constant Small Area Estimation model using R-INLA. — constant_inla","text":"sf simple features object geometry. verbose R-INLA run mode verbose = TRUE. cores Number cores, passed R-INLA, defaults parallel::detectCores().","code":""},{"path":"/reference/constant_inla.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit constant Small Area Estimation model using R-INLA. — constant_inla","text":"","code":"fit <- constant_inla(mw, cores = 2) #> Error in nrow(sf): object 'mw' not found mean <- plogis(fit$summary.fixed$mean) #> Error in plogis(fit$summary.fixed$mean): object 'fit' not found"},{"path":"/reference/constant_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit constant Small Area Estimation model using rstan. — constant_stan","title":"Fit constant Small Area Estimation model using rstan. — constant_stan","text":"Simply fits constant (mean). useful benchmark models.","code":""},{"path":"/reference/constant_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit constant Small Area Estimation model using rstan. — constant_stan","text":"","code":"constant_stan(   sf,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores() )"},{"path":"/reference/constant_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit constant Small Area Estimation model using rstan. — constant_stan","text":"sf simple features object geometry. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores()","code":""},{"path":"/reference/constant_stan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit constant Small Area Estimation model using rstan. — constant_stan","text":"","code":"constant_stan(mw, cores = 2) #> Error in which(!is.na(sf$y)): object 'mw' not found"},{"path":"/reference/constant_tmb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit constant Small Area Estimation model using TMB. — constant_tmb","title":"Fit constant Small Area Estimation model using TMB. — constant_tmb","text":"Simply fits constant (mean). useful benchmark models.","code":""},{"path":"/reference/constant_tmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit constant Small Area Estimation model using TMB. — constant_tmb","text":"","code":"constant_tmb(sf, its = 1000)"},{"path":"/reference/constant_tmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit constant Small Area Estimation model using TMB. — constant_tmb","text":"sf simple features object geometry. Number iterations outer loop optimisation, passed nlminb.","code":""},{"path":"/reference/constant_tmb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit constant Small Area Estimation model using TMB. — constant_tmb","text":"","code":"constant_tmb(mw, its = 100) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/constant_tmbstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit constant Small Area Estimation model using tmbstan. — constant_tmbstan","title":"Fit constant Small Area Estimation model using tmbstan. — constant_tmbstan","text":"Simply fits constant (mean). useful benchmark models.","code":""},{"path":"/reference/constant_tmbstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit constant Small Area Estimation model using tmbstan. — constant_tmbstan","text":"","code":"constant_tmbstan(   sf,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores() )"},{"path":"/reference/constant_tmbstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit constant Small Area Estimation model using tmbstan. — constant_tmbstan","text":"sf simple features object geometry. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores()","code":""},{"path":"/reference/constant_tmbstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit constant Small Area Estimation model using tmbstan. — constant_tmbstan","text":"","code":"constant_tmbstan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/create_folds.html","id":null,"dir":"Reference","previous_headings":"","what":"Create cross-validation training data sets. — create_folds","title":"Create cross-validation training data sets. — create_folds","text":"Creates list training datasets certain entries remove_cols replaced NA according type cross-validation. type = \"LOO\" one entry training dataset replaced NA, type = \"SLOO\" one entry entries neighbours area corresponds replaced NA.","code":""},{"path":"/reference/create_folds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create cross-validation training data sets. — create_folds","text":"","code":"create_folds(sf, remove_cols = c(\"y\"), type = \"LOO\")"},{"path":"/reference/create_folds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create cross-validation training data sets. — create_folds","text":"sf simple features object geometry. remove_cols vector named columns entries replaced NA training data sets. Defaults c(\"y\"). type One \"LOO\" \"SLOO\".","code":""},{"path":"/reference/create_folds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create cross-validation training data sets. — create_folds","text":"list nrow(sf) training set lists. training set list contains: data training data set left-entries. held_out indices held-regions. predict_on indices regions predicted upon.","code":""},{"path":"/reference/create_folds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create cross-validation training data sets. — create_folds","text":"","code":"create_folds(mw, remove_cols = c(\"y\", \"est\")) #> Error in remove_cols %in% names(sf): object 'mw' not found"},{"path":"/reference/create_sf_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create height by width grid sf object — create_sf_grid","title":"Create height by width grid sf object — create_sf_grid","text":"Create height width grid sf object","code":""},{"path":"/reference/create_sf_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create height by width grid sf object — create_sf_grid","text":"","code":"create_sf_grid(height, width)"},{"path":"/reference/create_sf_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create height by width grid sf object — create_sf_grid","text":"height Number grid cells height. width Number grid cells width.","code":""},{"path":"/reference/create_sf_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create height by width grid sf object — create_sf_grid","text":"height width  sf object.","code":""},{"path":"/reference/crps.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute an approximation to the continuous ranked probability score. — crps","title":"Compute an approximation to the continuous ranked probability score. — crps","text":"Compute approximation continuous ranked probability score.","code":""},{"path":"/reference/crps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute an approximation to the continuous ranked probability score. — crps","text":"","code":"crps(samples, true_value)"},{"path":"/reference/crps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute an approximation to the continuous ranked probability score. — crps","text":"samples collection draws probability distribution. true_value underlying true value compared .","code":""},{"path":"/reference/crps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute an approximation to the continuous ranked probability score. — crps","text":"continuous ranked probability score (CRPS)","code":""},{"path":"/reference/dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Deviance information criterion generic. — dic","title":"Deviance information criterion generic. — dic","text":"Deviance information criterion generic.","code":""},{"path":"/reference/dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deviance information criterion generic. — dic","text":"","code":"dic(fit, ...)  # S3 method for inla dic(fit, ...)  # S3 method for stanfit dic(fit, ...)"},{"path":"/reference/dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deviance information criterion generic. — dic","text":"fit Fitted model. ... Additional arguments passed dic.","code":""},{"path":"/reference/dxbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Density of the generalised binomial distribution. — dxbinom","title":"Density of the generalised binomial distribution. — dxbinom","text":"Density generalised binomial distribution.","code":""},{"path":"/reference/dxbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density of the generalised binomial distribution. — dxbinom","text":"","code":"dxbinom(x, size, prob, log = FALSE)"},{"path":"/reference/dxbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density of the generalised binomial distribution. — dxbinom","text":"x real number less size. size real number trials. prob probability success. log returned probability log scale?","code":""},{"path":"/reference/fck_aghq.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Centroid MVN Small Area Estimation model using aghq. — fck_aghq","title":"Fit Centroid MVN Small Area Estimation model using aghq. — fck_aghq","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using centroid_covariance. Kernel hyper-parameters fixed.","code":""},{"path":"/reference/fck_aghq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Centroid MVN Small Area Estimation model using aghq. — fck_aghq","text":"","code":"fck_aghq(sf, k = 3, kernel = matern, ...)"},{"path":"/reference/fck_aghq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Centroid MVN Small Area Estimation model using aghq. — fck_aghq","text":"sf simple features object geometry. k Number quadrature points per hyperparameter dimension. kernel kernel function, defaults matern. ... Additional arguments kernel.","code":""},{"path":"/reference/fck_aghq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Centroid MVN Small Area Estimation model using aghq. — fck_aghq","text":"","code":"fck_aghq(mw) #> Error in sf::st_centroid(sf): object 'mw' not found"},{"path":"/reference/fck_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Centroid MVN Small Area Estimation model using R-INLA. — fck_inla","title":"Fit Centroid MVN Small Area Estimation model using R-INLA. — fck_inla","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using centroid_covariance.","code":""},{"path":"/reference/fck_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Centroid MVN Small Area Estimation model using R-INLA. — fck_inla","text":"","code":"fck_inla(   sf,   verbose = FALSE,   kernel = matern,   cores = parallel::detectCores(),   ... )"},{"path":"/reference/fck_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Centroid MVN Small Area Estimation model using R-INLA. — fck_inla","text":"sf simple features object geometry. verbose R-INLA run mode verbose = TRUE. kernel kernel function, defaults matern. cores Number cores, passed R-INLA, defaults parallel::detectCores(). ... Additional arguments kernel.","code":""},{"path":"/reference/fck_inla.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Centroid MVN Small Area Estimation model using R-INLA. — fck_inla","text":"","code":"fck_inla(mw, cores = 2) #> Error in sf::st_centroid(sf): object 'mw' not found"},{"path":"/reference/fck_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Centroid MVN Small Area Estimation model using rstan. — fck_stan","title":"Fit Centroid MVN Small Area Estimation model using rstan. — fck_stan","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using centroid_covariance. Kernel hyper-parameters fixed.","code":""},{"path":"/reference/fck_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Centroid MVN Small Area Estimation model using rstan. — fck_stan","text":"","code":"fck_stan(   sf,   bym2 = FALSE,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores(),   kernel = matern,   ... )"},{"path":"/reference/fck_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Centroid MVN Small Area Estimation model using rstan. — fck_stan","text":"sf simple features object geometry. bym2 Logical indicating centroid spatial random effects convoluted unstructured IID noise, defaults FALSE. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores() kernel kernel function, defaults matern. ... Additional arguments kernel.","code":""},{"path":"/reference/fck_stan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Centroid MVN Small Area Estimation model using rstan. — fck_stan","text":"","code":"fck_stan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in sf::st_centroid(sf): object 'mw' not found"},{"path":"/reference/fck_tmb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Centroid MVN Small Area Estimation model using TMB. — fck_tmb","title":"Fit Centroid MVN Small Area Estimation model using TMB. — fck_tmb","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using centroid_covariance. Kernel hyper-parameters fixed.","code":""},{"path":"/reference/fck_tmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Centroid MVN Small Area Estimation model using TMB. — fck_tmb","text":"","code":"fck_tmb(sf, its = 1000, kernel = matern, ...)"},{"path":"/reference/fck_tmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Centroid MVN Small Area Estimation model using TMB. — fck_tmb","text":"sf simple features object geometry. Number iterations outer loop optimisation, passed nlminb. kernel kernel function, defaults matern. ... Additional arguments kernel.","code":""},{"path":"/reference/fck_tmb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Centroid MVN Small Area Estimation model using TMB. — fck_tmb","text":"","code":"fck_tmb(mw, its = 100) #> Error in sf::st_centroid(sf): object 'mw' not found"},{"path":"/reference/fck_tmbstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Centroid MVN Small Area Estimation model using tmbstan. — fck_tmbstan","title":"Fit Centroid MVN Small Area Estimation model using tmbstan. — fck_tmbstan","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using centroid_covariance. Kernel hyper-parameters fixed.","code":""},{"path":"/reference/fck_tmbstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Centroid MVN Small Area Estimation model using tmbstan. — fck_tmbstan","text":"","code":"fck_tmbstan(   sf,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores(),   kernel = matern,   ... )"},{"path":"/reference/fck_tmbstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Centroid MVN Small Area Estimation model using tmbstan. — fck_tmbstan","text":"sf simple features object geometry. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores() kernel kernel function, defaults matern. ... Additional arguments kernel.","code":""},{"path":"/reference/fck_tmbstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Centroid MVN Small Area Estimation model using tmbstan. — fck_tmbstan","text":"","code":"fck_tmbstan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in sf::st_centroid(sf): object 'mw' not found"},{"path":"/reference/fik_aghq.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Integrated MVN Small Area Estimation model using aghq. — fik_aghq","title":"Fit Integrated MVN Small Area Estimation model using aghq. — fik_aghq","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using integrated_covariance.","code":""},{"path":"/reference/fik_aghq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Integrated MVN Small Area Estimation model using aghq. — fik_aghq","text":"","code":"fik_aghq(sf, k = 3, L = 10, type = \"hexagonal\", kernel = matern, ...)"},{"path":"/reference/fik_aghq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Integrated MVN Small Area Estimation model using aghq. — fik_aghq","text":"sf simple features object geometry. k Number quadrature points per hyperparameter dimension. L number Monte Carlo samples draw area. type type argument sf::st_sample, defaults \"hexagonal\" kernel kernel function, defaults matern. ... Additional arguments kernel.","code":""},{"path":"/reference/fik_aghq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Integrated MVN Small Area Estimation model using aghq. — fik_aghq","text":"","code":"fik_tmb(mw) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/fik_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Sampling MVN Small Area Estimation model using R-INLA. — fik_inla","title":"Fit Sampling MVN Small Area Estimation model using R-INLA. — fik_inla","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using integrated_covariance.","code":""},{"path":"/reference/fik_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Sampling MVN Small Area Estimation model using R-INLA. — fik_inla","text":"","code":"fik_inla(   sf,   verbose = FALSE,   L = 50,   kernel = matern,   cores = parallel::detectCores(),   ... )"},{"path":"/reference/fik_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Sampling MVN Small Area Estimation model using R-INLA. — fik_inla","text":"sf simple features object geometry. verbose R-INLA run mode verbose = TRUE. L number Monte Carlo samples draw area. kernel kernel function, defaults matern. cores Number cores, passed R-INLA, defaults parallel::detectCores(). ... Additional arguments kernel.","code":""},{"path":"/reference/fik_inla.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Sampling MVN Small Area Estimation model using R-INLA. — fik_inla","text":"","code":"fik_inla(mw, cores = 2) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/fik_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Integrated MVN Small Area Estimation model using rstan. — fik_stan","title":"Fit Integrated MVN Small Area Estimation model using rstan. — fik_stan","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using integrated_covariance.","code":""},{"path":"/reference/fik_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Integrated MVN Small Area Estimation model using rstan. — fik_stan","text":"","code":"fik_stan(   sf,   bym2 = FALSE,   L = 10,   type = \"hexagonal\",   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores(),   kernel = matern,   ... )"},{"path":"/reference/fik_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Integrated MVN Small Area Estimation model using rstan. — fik_stan","text":"sf simple features object geometry. bym2 Logical indicating spatial random effects convoluted unstructured IID noise, defaults FALSE. L number Monte Carlo samples draw area. type type argument sf::st_sample, defaults \"hexagonal\" nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores() kernel kernel function, defaults matern. ... Additional arguments kernel.","code":""},{"path":"/reference/fik_stan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Integrated MVN Small Area Estimation model using rstan. — fik_stan","text":"","code":"fik_stan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/fik_tmb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Integrated MVN Small Area Estimation model using TMB. — fik_tmb","title":"Fit Integrated MVN Small Area Estimation model using TMB. — fik_tmb","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using integrated_covariance.","code":""},{"path":"/reference/fik_tmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Integrated MVN Small Area Estimation model using TMB. — fik_tmb","text":"","code":"fik_tmb(sf, its = 1000, L = 10, type = \"hexagonal\", kernel = matern, ...)"},{"path":"/reference/fik_tmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Integrated MVN Small Area Estimation model using TMB. — fik_tmb","text":"sf simple features object geometry. Number iterations outer loop optimisation, passed nlminb. L number Monte Carlo samples draw area. type type argument sf::st_sample, defaults \"hexagonal\" kernel kernel function, defaults matern. ... Additional arguments kernel.","code":""},{"path":"/reference/fik_tmb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Integrated MVN Small Area Estimation model using TMB. — fik_tmb","text":"","code":"fik_tmb(mw, its = 100) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/fik_tmbstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Integrated MVN Small Area Estimation model using tmbstan. — fik_tmbstan","title":"Fit Integrated MVN Small Area Estimation model using tmbstan. — fik_tmbstan","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using integrated_covariance.","code":""},{"path":"/reference/fik_tmbstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Integrated MVN Small Area Estimation model using tmbstan. — fik_tmbstan","text":"","code":"fik_tmbstan(   sf,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores(),   L = 10,   type = \"hexagonal\",   kernel = matern,   ... )"},{"path":"/reference/fik_tmbstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Integrated MVN Small Area Estimation model using tmbstan. — fik_tmbstan","text":"sf simple features object geometry. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores() L number Monte Carlo samples draw area. type type argument sf::st_sample, defaults \"hexagonal\" kernel kernel function, defaults matern. ... Additional arguments kernel.","code":""},{"path":"/reference/fik_tmbstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Integrated MVN Small Area Estimation model using tmbstan. — fik_tmbstan","text":"","code":"fik_tmbstan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/gamma_ADFun.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a TMB::ADFun object for the gamma likelihood. — gamma_ADFun","title":"Create a TMB::ADFun object for the gamma likelihood. — gamma_ADFun","text":"Create TMB::ADFun object gamma likelihood.","code":""},{"path":"/reference/gamma_ADFun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a TMB::ADFun object for the gamma likelihood. — gamma_ADFun","text":"","code":"gamma_ADFun(x)"},{"path":"/reference/gamma_ADFun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a TMB::ADFun object for the gamma likelihood. — gamma_ADFun","text":"x Vector observations.","code":""},{"path":"/reference/gamma_ADFun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a TMB::ADFun object for the gamma likelihood. — gamma_ADFun","text":"list returned TMB::MakeADFun representing negative loglikelihood gamma distribution.","code":""},{"path":"/reference/get_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute scale of a precision matrix using R-INLA. — get_scale","title":"Compute scale of a precision matrix using R-INLA. — get_scale","text":"Takes riebler_gv generalised inverse, implemented INLA::inla.qinv. default assumed graph fully connected.","code":""},{"path":"/reference/get_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute scale of a precision matrix using R-INLA. — get_scale","text":"","code":"get_scale(Q, constraint = list(A = matrix(1, 1, nrow(Q)), e = 0))"},{"path":"/reference/get_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute scale of a precision matrix using R-INLA. — get_scale","text":"Q (square, symmetric) precision matrix. constraint list arguments e imposes constraint Au = e (precision u Q). See ?INLA::f argument extraconstr. constraint default value sum--zero constraint.","code":""},{"path":"/reference/get_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute scale of a precision matrix using R-INLA. — get_scale","text":"","code":"nb <- sf_to_nb(mw) #> Error in .class1(object): object 'mw' not found Q <- nb_to_precision(nb) #> Error in nb_to_precision(nb): object 'nb' not found get_scale(Q) #> Error in nrow(Q): object 'Q' not found"},{"path":"/reference/get_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Report the time taken to fit the model. — get_time","title":"Report the time taken to fit the model. — get_time","text":"Report time taken fit model.","code":""},{"path":"/reference/get_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report the time taken to fit the model. — get_time","text":"","code":"get_time(fit, ...)  # S3 method for inla get_time(fit, ...)  # S3 method for inlax get_time(fit, ...)  # S3 method for stanfit get_time(fit, ...)"},{"path":"/reference/get_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report the time taken to fit the model. — get_time","text":"fit Fitted model. ... Additional arguments passed get_time.","code":""},{"path":"/reference/held_out_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute forecast assessments for model at a single held-out point. — held_out_metrics","title":"Compute forecast assessments for model at a single held-out point. — held_out_metrics","text":"Compute forecast assessments model single held-point.","code":""},{"path":"/reference/held_out_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute forecast assessments for model at a single held-out point. — held_out_metrics","text":"","code":"held_out_metrics(fit, sf, i, S = 1000)"},{"path":"/reference/held_out_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute forecast assessments for model at a single held-out point. — held_out_metrics","text":"fit Fitted model. sf simple features object geometry. index (1:nrow(sf)) held-point. S number Monte Carlo samples draw approximate posterior.","code":""},{"path":"/reference/iid_aghq.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit IID Small Area Estimation model using aghq. — iid_aghq","title":"Fit IID Small Area Estimation model using aghq. — iid_aghq","text":"Random effects independent identically distributed.","code":""},{"path":"/reference/iid_aghq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit IID Small Area Estimation model using aghq. — iid_aghq","text":"","code":"iid_aghq(sf, k = 3)"},{"path":"/reference/iid_aghq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit IID Small Area Estimation model using aghq. — iid_aghq","text":"sf simple features object geometry. k Number quadrature points per hyperparameter dimension.","code":""},{"path":"/reference/iid_aghq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit IID Small Area Estimation model using aghq. — iid_aghq","text":"","code":"iid_aghq(mw) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/iid_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit IID Small Area Estimation model using R-INLA. — iid_inla","title":"Fit IID Small Area Estimation model using R-INLA. — iid_inla","text":"Random effects independent identically distributed.","code":""},{"path":"/reference/iid_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit IID Small Area Estimation model using R-INLA. — iid_inla","text":"","code":"iid_inla(sf, verbose = FALSE, cores = parallel::detectCores())"},{"path":"/reference/iid_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit IID Small Area Estimation model using R-INLA. — iid_inla","text":"sf simple features object geometry. verbose R-INLA run mode verbose = TRUE. cores Number cores, passed R-INLA, defaults parallel::detectCores().","code":""},{"path":"/reference/iid_inla.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit IID Small Area Estimation model using R-INLA. — iid_inla","text":"","code":"iid_inla(mw, cores = 2) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/iid_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit IID Small Area Estimation model using rstan. — iid_stan","title":"Fit IID Small Area Estimation model using rstan. — iid_stan","text":"Random effects independent identically distributed.","code":""},{"path":"/reference/iid_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit IID Small Area Estimation model using rstan. — iid_stan","text":"","code":"iid_stan(   sf,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores() )"},{"path":"/reference/iid_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit IID Small Area Estimation model using rstan. — iid_stan","text":"sf simple features object geometry. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores()","code":""},{"path":"/reference/iid_stan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit IID Small Area Estimation model using rstan. — iid_stan","text":"","code":"iid_stan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in which(!is.na(sf$y)): object 'mw' not found"},{"path":"/reference/iid_tmb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit IID Small Area Estimation model using TMB. — iid_tmb","title":"Fit IID Small Area Estimation model using TMB. — iid_tmb","text":"Random effects independent identically distributed.","code":""},{"path":"/reference/iid_tmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit IID Small Area Estimation model using TMB. — iid_tmb","text":"","code":"iid_tmb(sf, its = 1000)"},{"path":"/reference/iid_tmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit IID Small Area Estimation model using TMB. — iid_tmb","text":"sf simple features object geometry. Number iterations outer loop optimisation, passed nlminb.","code":""},{"path":"/reference/iid_tmb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit IID Small Area Estimation model using TMB. — iid_tmb","text":"","code":"iid_tmb(mw, its = 100) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/iid_tmbstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit IID Small Area Estimation model using tmbstan. — iid_tmbstan","title":"Fit IID Small Area Estimation model using tmbstan. — iid_tmbstan","text":"Random effects independent identically distributed.","code":""},{"path":"/reference/iid_tmbstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit IID Small Area Estimation model using tmbstan. — iid_tmbstan","text":"","code":"iid_tmbstan(   sf,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores() )"},{"path":"/reference/iid_tmbstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit IID Small Area Estimation model using tmbstan. — iid_tmbstan","text":"sf simple features object geometry. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores()","code":""},{"path":"/reference/iid_tmbstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit IID Small Area Estimation model using tmbstan. — iid_tmbstan","text":"","code":"constant_tmbstan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/ik_aghq.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Bayesian Integrated MVN Small Area Estimation model using aghq. — ik_aghq","title":"Fit Bayesian Integrated MVN Small Area Estimation model using aghq. — ik_aghq","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using integrated_covariance. Kernel hyperparameters given prior learnt.","code":""},{"path":"/reference/ik_aghq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Bayesian Integrated MVN Small Area Estimation model using aghq. — ik_aghq","text":"","code":"ik_aghq(sf, k = 3, L = 10, type = \"hexagonal\", ...)"},{"path":"/reference/ik_aghq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Bayesian Integrated MVN Small Area Estimation model using aghq. — ik_aghq","text":"sf simple features object geometry. k Number quadrature points per hyperparameter dimension. L number Monte Carlo samples draw area. type type argument sf::st_sample, defaults \"hexagonal\" ... Additional arguments kernel.","code":""},{"path":"/reference/ik_aghq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Bayesian Integrated MVN Small Area Estimation model using aghq. — ik_aghq","text":"","code":"ik_aghq(mw) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/ik_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Bayesian Integrated MVN Small Area Estimation model using rstan. — ik_stan","title":"Fit Bayesian Integrated MVN Small Area Estimation model using rstan. — ik_stan","text":"Fit Bayesian Integrated MVN Small Area Estimation model using rstan.","code":""},{"path":"/reference/ik_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Bayesian Integrated MVN Small Area Estimation model using rstan. — ik_stan","text":"","code":"ik_stan(   sf,   bym2 = FALSE,   L = 10,   type = \"hexagonal\",   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores() )"},{"path":"/reference/ik_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Bayesian Integrated MVN Small Area Estimation model using rstan. — ik_stan","text":"sf simple features object geometry. bym2 Logical indicating spatial random effects convoluted unstructured IID noise, defaults FALSE. L number Monte Carlo samples draw area. type type argument sf::st_sample, defaults \"hexagonal\" nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores()","code":""},{"path":"/reference/ik_stan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Bayesian Integrated MVN Small Area Estimation model using rstan. — ik_stan","text":"","code":"ik_stan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/ik_tmb.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Bayesian Integrated MVN Small Area Estimation model using TMB. — ik_tmb","title":"Fit Bayesian Integrated MVN Small Area Estimation model using TMB. — ik_tmb","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using integrated_covariance. Kernel hyperparameters given prior learnt.","code":""},{"path":"/reference/ik_tmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Bayesian Integrated MVN Small Area Estimation model using TMB. — ik_tmb","text":"","code":"ik_tmb(sf, its = 1000, L = 10, type = \"hexagonal\", ...)"},{"path":"/reference/ik_tmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Bayesian Integrated MVN Small Area Estimation model using TMB. — ik_tmb","text":"sf simple features object geometry. Number iterations outer loop optimisation, passed nlminb. L number Monte Carlo samples draw area. type type argument sf::st_sample, defaults \"hexagonal\" ... Additional arguments kernel.","code":""},{"path":"/reference/ik_tmb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Bayesian Integrated MVN Small Area Estimation model using TMB. — ik_tmb","text":"","code":"ik_tmb(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/ik_tmbstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Bayesian Integrated MVN Small Area Estimation model using tmbstan. — ik_tmbstan","title":"Fit Bayesian Integrated MVN Small Area Estimation model using tmbstan. — ik_tmbstan","text":"Random effects multivariate Gaussian distribution covariance matrix calculated using integrated_covariance. Kernel hyperparameters given prior learnt.","code":""},{"path":"/reference/ik_tmbstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Bayesian Integrated MVN Small Area Estimation model using tmbstan. — ik_tmbstan","text":"","code":"ik_tmbstan(   sf,   nsim_warm = 100,   nsim_iter = 1000,   chains = 4,   cores = parallel::detectCores(),   L = 10,   type = \"hexagonal\",   ... )"},{"path":"/reference/ik_tmbstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Bayesian Integrated MVN Small Area Estimation model using tmbstan. — ik_tmbstan","text":"sf simple features object geometry. nsim_warm Number warmup samples, passed rstan. nsim_iter Number samples, passed rstan. chains Number chains, gets nsim_warm + nsim_iter samples, passed rstan. cores Number cores, passed rstan, defaults parallel::detectCores() L number Monte Carlo samples draw area. type type argument sf::st_sample, defaults \"hexagonal\" ... Additional arguments kernel.","code":""},{"path":"/reference/ik_tmbstan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Bayesian Integrated MVN Small Area Estimation model using tmbstan. — ik_tmbstan","text":"","code":"ik_tmbstan(mw, nsim_warm = 0, nsim_iter = 100, cores = 2) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/integrated_covariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute integrated kernel Gram matrix. — integrated_covariance","title":"Compute integrated kernel Gram matrix. — integrated_covariance","text":"Draws S samples area sf averages kernel pair draws. lengthscale provided best_average method used.","code":""},{"path":"/reference/integrated_covariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute integrated kernel Gram matrix. — integrated_covariance","text":"","code":"integrated_covariance(   sf,   L = 10,   kernel = matern,   type = \"hexagonal\",   l = NULL,   ... )"},{"path":"/reference/integrated_covariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute integrated kernel Gram matrix. — integrated_covariance","text":"sf simple features object geometry. L number Monte Carlo samples draw area. kernel kernel function, defaults matern. type type argument sf::st_sample, defaults \"hexagonal\" l lengthscale. ... Additional arguments kernel.","code":""},{"path":"/reference/integrated_covariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute integrated kernel Gram matrix. — integrated_covariance","text":"","code":"integrated_covariance(mw) #> Error in nrow(sf): object 'mw' not found"},{"path":"/reference/invgamma_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Find parameters of the inverse Gamma distribution such that plb of the probability mass is below lb\nand pub of the probability mass is above ub. — invgamma_prior","title":"Find parameters of the inverse Gamma distribution such that plb of the probability mass is below lb\nand pub of the probability mass is above ub. — invgamma_prior","text":"Find parameters inverse Gamma distribution plb probability mass lb pub probability mass ub.","code":""},{"path":"/reference/invgamma_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find parameters of the inverse Gamma distribution such that plb of the probability mass is below lb\nand pub of the probability mass is above ub. — invgamma_prior","text":"","code":"invgamma_prior(lb, ub, plb = 0.01, pub = 0.01)"},{"path":"/reference/invgamma_prior.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Find parameters of the inverse Gamma distribution such that plb of the probability mass is below lb\nand pub of the probability mass is above ub. — invgamma_prior","text":"brms following https://betanalpha.github.io/assets/case_studies/gp_part3/part3.html.","code":""},{"path":"/reference/invgamma_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find parameters of the inverse Gamma distribution such that plb of the probability mass is below lb\nand pub of the probability mass is above ub. — invgamma_prior","text":"lb Lower bound. ub Upper bound. plb Proportion mass lb, defaults 0.01. pub Proportion mass lb, defaults 0.01.","code":""},{"path":"/reference/list_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind the rows of a list together, adding an id column. — list_to_df","title":"Bind the rows of a list together, adding an id column. — list_to_df","text":"Bind rows list together, adding id column.","code":""},{"path":"/reference/list_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind the rows of a list together, adding an id column. — list_to_df","text":"","code":"list_to_df(list)"},{"path":"/reference/list_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind the rows of a list together, adding an id column. — list_to_df","text":"list list.","code":""},{"path":"/reference/list_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind the rows of a list together, adding an id column. — list_to_df","text":"dataframe.","code":""},{"path":"/reference/marginal_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Intervals for posterior marginals. — marginal_intervals","title":"Intervals for posterior marginals. — marginal_intervals","text":"Intervals posterior marginals.","code":""},{"path":"/reference/marginal_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intervals for posterior marginals. — marginal_intervals","text":"","code":"marginal_intervals(fit, ...)  # S3 method for inla marginal_intervals(fit, ...)  # S3 method for stanfit marginal_intervals(fit, parameter, ...)"},{"path":"/reference/marginal_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intervals for posterior marginals. — marginal_intervals","text":"fit Fitted model. ... Additional arguments passed marginal_intervals. parameter String containing parameter name.","code":""},{"path":"/reference/mat_to_nb.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function for spdep::mat2listw. — mat_to_nb","title":"Wrapper function for spdep::mat2listw. — mat_to_nb","text":"Wrapper function spdep::mat2listw.","code":""},{"path":"/reference/mat_to_nb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function for spdep::mat2listw. — mat_to_nb","text":"","code":"mat_to_nb(mat)"},{"path":"/reference/mat_to_nb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function for spdep::mat2listw. — mat_to_nb","text":"mat adjacency matrix.","code":""},{"path":"/reference/mat_to_nb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function for spdep::mat2listw. — mat_to_nb","text":"neighbourhood list object.","code":""},{"path":"/reference/mat_to_nb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper function for spdep::mat2listw. — mat_to_nb","text":"","code":"adj <- rbind(c(0, 1, 0), c(0, 0, 1), c(0, 0, 0)) adj <- adj + t(adj) nb <- mat_to_nb(adj)"},{"path":"/reference/matern.html","id":null,"dir":"Reference","previous_headings":"","what":"The Matern covariance function with smoothness parameter 3/2. — matern","title":"The Matern covariance function with smoothness parameter 3/2. — matern","text":"Matern covariance function smoothness parameter 3/2.","code":""},{"path":"/reference/matern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Matern covariance function with smoothness parameter 3/2. — matern","text":"","code":"matern(r, l = 1)"},{"path":"/reference/matern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Matern covariance function with smoothness parameter 3/2. — matern","text":"r distance two points. l length-scale, defaults l = 1.","code":""},{"path":"/reference/mw.html","id":null,"dir":"Reference","previous_headings":"","what":"Malawi DHS 2015 Survey Data. — mw","title":"Malawi DHS 2015 Survey Data. — mw","text":"Malawi DHS 2015 Survey Data.","code":""},{"path":"/reference/mw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Malawi DHS 2015 Survey Data. — mw","text":"","code":"mw"},{"path":"/reference/mw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Malawi DHS 2015 Survey Data. — mw","text":"simple features data frame 28 rows 17 variables.","code":""},{"path":"/reference/nb_to_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a graph from nb. — nb_to_graph","title":"Create a graph from nb. — nb_to_graph","text":"Create graph nb.","code":""},{"path":"/reference/nb_to_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a graph from nb. — nb_to_graph","text":"","code":"nb_to_graph(nb)"},{"path":"/reference/nb_to_graph.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Create a graph from nb. — nb_to_graph","text":"code Mitzi Morris.","code":""},{"path":"/reference/nb_to_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a graph from nb. — nb_to_graph","text":"nb neighbourhood list object.","code":""},{"path":"/reference/nb_to_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a graph from nb. — nb_to_graph","text":"list containing n number nodes graph n_edges -node1 -node2 -","code":""},{"path":"/reference/nb_to_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a graph from nb. — nb_to_graph","text":"","code":"nb <- sf_to_nb(mw) #> Error in .class1(object): object 'mw' not found nb_to_graph(nb) #> Error in nb_to_graph(nb): object 'nb' not found"},{"path":"/reference/nb_to_precision.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ICAR precision matrix from nb. — nb_to_precision","title":"Create ICAR precision matrix from nb. — nb_to_precision","text":"Create ICAR precision matrix nb.","code":""},{"path":"/reference/nb_to_precision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ICAR precision matrix from nb. — nb_to_precision","text":"","code":"nb_to_precision(nb, W = NULL, return_sparse = FALSE, scale_precision = FALSE)"},{"path":"/reference/nb_to_precision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ICAR precision matrix from nb. — nb_to_precision","text":"nb neighbourhood list object. W length(nb) length(nb) symmetric weights matrix zeros non-neighbouring areas. return_sparse matrix returned class sparseMatrix? scale_precision matrix returned scaled using scale_gmrf_precision?","code":""},{"path":"/reference/nb_to_precision.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create ICAR precision matrix from nb. — nb_to_precision","text":"","code":"nb <- sf_to_nb(mw) #> Error in .class1(object): object 'mw' not found nb_to_precision(nb) #> Error in nb_to_precision(nb): object 'nb' not found"},{"path":"/reference/norm_ADFun.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a TMB::ADFun object for the normal likelihood. — norm_ADFun","title":"Create a TMB::ADFun object for the normal likelihood. — norm_ADFun","text":"Create TMB::ADFun object normal likelihood.","code":""},{"path":"/reference/norm_ADFun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a TMB::ADFun object for the normal likelihood. — norm_ADFun","text":"","code":"norm_ADFun(x)"},{"path":"/reference/norm_ADFun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a TMB::ADFun object for the normal likelihood. — norm_ADFun","text":"x Vector observations.","code":""},{"path":"/reference/norm_ADFun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a TMB::ADFun object for the normal likelihood. — norm_ADFun","text":"list returned TMB::MakeADFun representing negative loglikelihood univariate normal.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"See magrittr::%>% for details. — %>%","title":"See magrittr::%>% for details. — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See magrittr::%>% for details. — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/plot_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a ggplot2 visualisation of a (neighbourhood) graph. — plot_graph","title":"Produce a ggplot2 visualisation of a (neighbourhood) graph. — plot_graph","text":"Produce ggplot2 visualisation (neighbourhood) graph.","code":""},{"path":"/reference/plot_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a ggplot2 visualisation of a (neighbourhood) graph. — plot_graph","text":"","code":"plot_graph(sf, add_geography = FALSE)"},{"path":"/reference/plot_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a ggplot2 visualisation of a (neighbourhood) graph. — plot_graph","text":"sf simple features object geometry. add_geography map geography plotted alongside graph?","code":""},{"path":"/reference/plot_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a ggplot2 visualisation of a (neighbourhood) graph. — plot_graph","text":"ggplot2 plot.","code":""},{"path":"/reference/plot_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a ggplot2 visualisation of a (neighbourhood) graph. — plot_graph","text":"","code":"plot_graph(mw, add_geography = TRUE) #> Error in .class1(object): object 'mw' not found"},{"path":"/reference/plot_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a ggplot2 visualisation of a matrix. — plot_matrix","title":"Produce a ggplot2 visualisation of a matrix. — plot_matrix","text":"Produce ggplot2 visualisation matrix.","code":""},{"path":"/reference/plot_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a ggplot2 visualisation of a matrix. — plot_matrix","text":"","code":"plot_matrix(M)"},{"path":"/reference/plot_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a ggplot2 visualisation of a matrix. — plot_matrix","text":"M matrix.","code":""},{"path":"/reference/plot_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a ggplot2 visualisation of a matrix. — plot_matrix","text":"ggplot2 plot.","code":""},{"path":"/reference/plot_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a ggplot2 visualisation of a matrix. — plot_matrix","text":"","code":"M <- matrix(1:9, nrow = 3, ncol = 3) plot_matrix(M)   plot_matrix(nb_to_precision(sf_to_nb(mw))) #> Error in .class1(object): object 'mw' not found"},{"path":"/reference/riebler_gv.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Riebler generalised variance of a covariance matrix. — riebler_gv","title":"Compute the Riebler generalised variance of a covariance matrix. — riebler_gv","text":"Let \\(\\) square matrix, Riebler generalised variance defined geometric mean marginal variances, given $$\\sigma_{\\mathrm{GV}}^2() = \\exp \\left( \\frac{1}{n} \\sum_{= 1}^n \\log A_{ii} \\right).$$","code":""},{"path":"/reference/riebler_gv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Riebler generalised variance of a covariance matrix. — riebler_gv","text":"","code":"riebler_gv(A)"},{"path":"/reference/riebler_gv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Riebler generalised variance of a covariance matrix. — riebler_gv","text":"square matrix.","code":""},{"path":"/reference/rows_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the rows of a dataframe to a list. — rows_to_list","title":"Convert the rows of a dataframe to a list. — rows_to_list","text":"Convert rows dataframe list.","code":""},{"path":"/reference/rows_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the rows of a dataframe to a list. — rows_to_list","text":"","code":"rows_to_list(df)"},{"path":"/reference/rows_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the rows of a dataframe to a list. — rows_to_list","text":"df dataframe.","code":""},{"path":"/reference/rows_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the rows of a dataframe to a list. — rows_to_list","text":"list.","code":""},{"path":"/reference/sample_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal samples. — sample_marginal","title":"Marginal samples. — sample_marginal","text":"Marginal samples.","code":""},{"path":"/reference/sample_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal samples. — sample_marginal","text":"","code":"sample_marginal(fit, ...)  # S3 method for inla sample_marginal(fit, i, n_obs, S = 1000, ...)  # S3 method for stanfit sample_marginal(fit, i, n_obs, S = 1000, ...)"},{"path":"/reference/sample_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal samples. — sample_marginal","text":"fit Fitted model. ... Additional arguments passed sample_marginal. index marginal sample . n_obs sample size. S number draws.","code":""},{"path":"/reference/scale_gmrf_precision.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales the precision matrix of a Gaussian Markov random field. — scale_gmrf_precision","title":"Scales the precision matrix of a Gaussian Markov random field. — scale_gmrf_precision","text":"Implements thing INLA::inla.scale.model.","code":""},{"path":"/reference/scale_gmrf_precision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales the precision matrix of a Gaussian Markov random field. — scale_gmrf_precision","text":"","code":"scale_gmrf_precision(Q, A = matrix(1, 1, nrow(Q)))"},{"path":"/reference/scale_gmrf_precision.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Scales the precision matrix of a Gaussian Markov random field. — scale_gmrf_precision","text":"code Jeff Eaton.","code":""},{"path":"/reference/scale_gmrf_precision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales the precision matrix of a Gaussian Markov random field. — scale_gmrf_precision","text":"Q (square, symmetric) precision matrix. See get_scale.","code":""},{"path":"/reference/scale_gmrf_precision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scales the precision matrix of a Gaussian Markov random field. — scale_gmrf_precision","text":"list containing rescaled (see \"note intrinsic conditional autoregressive models disconnected graphs\" Freni-Sterrantino, Ventrucci Rue) matrix Q, scales containing scale used connected component.","code":""},{"path":"/reference/scale_gmrf_precision.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales the precision matrix of a Gaussian Markov random field. — scale_gmrf_precision","text":"","code":"nb <- sf_to_nb(mw) #> Error in .class1(object): object 'mw' not found Q <- nb_to_precision(nb) #> Error in nb_to_precision(nb): object 'nb' not found scale_gmrf_precision(Q) #> Error in spdep::mat2listw(mat): object 'Q' not found"},{"path":"/reference/sf_to_nb.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function for spdep::poly2nb. — sf_to_nb","title":"Wrapper function for spdep::poly2nb. — sf_to_nb","text":"Wrapper function spdep::poly2nb.","code":""},{"path":"/reference/sf_to_nb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function for spdep::poly2nb. — sf_to_nb","text":"","code":"sf_to_nb(sf)"},{"path":"/reference/sf_to_nb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function for spdep::poly2nb. — sf_to_nb","text":"sf simple features object geometry.","code":""},{"path":"/reference/sf_to_nb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function for spdep::poly2nb. — sf_to_nb","text":"neighbourhood list object.","code":""},{"path":"/reference/sf_to_nb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper function for spdep::poly2nb. — sf_to_nb","text":"","code":"nb <- sf_to_nb(mw) #> Error in .class1(object): object 'mw' not found"},{"path":"/reference/tz.html","id":null,"dir":"Reference","previous_headings":"","what":"Tanzania AIS 2012 Survey Data. — tz","title":"Tanzania AIS 2012 Survey Data. — tz","text":"Tanzania AIS 2012 Survey Data.","code":""},{"path":"/reference/tz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tanzania AIS 2012 Survey Data. — tz","text":"","code":"tz"},{"path":"/reference/tz.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tanzania AIS 2012 Survey Data. — tz","text":"simple features data frame 159 rows 17 variables.","code":""},{"path":"/reference/update_naming.html","id":null,"dir":"Reference","previous_headings":"","what":"A dictionary to convert from internal names to human readable names, used in the manuscript. — update_naming","title":"A dictionary to convert from internal names to human readable names, used in the manuscript. — update_naming","text":"dictionary convert internal names human readable names, used manuscript.","code":""},{"path":"/reference/update_naming.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A dictionary to convert from internal names to human readable names, used in the manuscript. — update_naming","text":"","code":"update_naming(df)"},{"path":"/reference/update_naming.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A dictionary to convert from internal names to human readable names, used in the manuscript. — update_naming","text":"df dataframe columns geometry, sim_model inf_model.","code":""},{"path":"/reference/update_naming.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A dictionary to convert from internal names to human readable names, used in the manuscript. — update_naming","text":"dataframe entries columns renamed.","code":""},{"path":"/reference/waic.html","id":null,"dir":"Reference","previous_headings":"","what":"Watanabe–Akaike (Widely-Applicable) information criterion generic. — waic","title":"Watanabe–Akaike (Widely-Applicable) information criterion generic. — waic","text":"Watanabe–Akaike (Widely-Applicable) information criterion generic.","code":""},{"path":"/reference/waic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Watanabe–Akaike (Widely-Applicable) information criterion generic. — waic","text":"","code":"waic(fit, ...)  # S3 method for inla waic(fit, ...)  # S3 method for stanfit waic(fit, ...)"},{"path":"/reference/waic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Watanabe–Akaike (Widely-Applicable) information criterion generic. — waic","text":"fit Fitted model. ... Additional arguments passed waic.","code":""},{"path":"/reference/wicar_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Weighted ICAR Small Area Estimation model using R-INLA. — wicar_inla","title":"Fit Weighted ICAR Small Area Estimation model using R-INLA. — wicar_inla","text":"Fit Weighted ICAR Small Area Estimation model using R-INLA.","code":""},{"path":"/reference/wicar_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Weighted ICAR Small Area Estimation model using R-INLA. — wicar_inla","text":"","code":"wicar_inla(sf, R, verbose = FALSE, cores = parallel::detectCores())"},{"path":"/reference/wicar_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Weighted ICAR Small Area Estimation model using R-INLA. — wicar_inla","text":"sf simple features object geometry. R sparse precision matrix class \"sparseMatrix\" verbose R-INLA run mode verbose = TRUE. cores Number cores, passed R-INLA, defaults parallel::detectCores().","code":""},{"path":"/reference/zw.html","id":null,"dir":"Reference","previous_headings":"","what":"Zimbabwe DHS 2015 Survey Data. — zw","title":"Zimbabwe DHS 2015 Survey Data. — zw","text":"Zimbabwe DHS 2015 Survey Data.","code":""},{"path":"/reference/zw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zimbabwe DHS 2015 Survey Data. — zw","text":"","code":"zw"},{"path":"/reference/zw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Zimbabwe DHS 2015 Survey Data. — zw","text":"simple features data frame 60 rows 17 variables.","code":""}]
